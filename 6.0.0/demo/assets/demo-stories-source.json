{
  "story-00-simple-notifications.html": "<div class=\"row\">\n  <div class=\"col\">\n    <button\n      type=\"button\"\n      class=\"superButton\"\n      (click)=\"openSuccess()\"\n      [disabled]=\"success && !successClosed\"\n    >add success</button>\n    <button\n      type=\"button\"\n      class=\"superButtonSecondary\"\n      (click)=\"closeSuccess()\"\n      [disabled]=\"!success || successClosed\"\n    >close</button>\n    <div class=\"eventLog\">\n      <div\n        class=\"eventLogEntry eventLogEntry-{{entry}}\"\n        *ngFor=\"let entry of successEventLog\"\n        >{{translateEventLog(entry)}}</div>\n    </div>\n  </div>\n  <div class=\"col\">\n    <button\n      type=\"button\"\n      class=\"superButton\"\n      (click)=\"openInfo()\"\n      [disabled]=\"info && !infoClosed\"\n    >add info</button>\n    <button\n      type=\"button\"\n      class=\"superButtonSecondary\"\n      (click)=\"closeInfo()\"\n      [disabled]=\"!info || infoClosed\"\n    >close</button>\n    <div class=\"eventLog\">\n      <div\n        class=\"eventLogEntry eventLogEntry-{{entry}}\"\n        *ngFor=\"let entry of infoEventLog\"\n      >{{translateEventLog(entry)}}</div>\n    </div>\n  </div>\n  <div class=\"col\">\n    <button\n      type=\"button\"\n      class=\"superButton\"\n      (click)=\"openWarn()\"\n      [disabled]=\"warn && !warnClosed\"\n    >add warn</button>\n    <button\n      type=\"button\"\n      class=\"superButtonSecondary\"\n      (click)=\"closeWarn()\"\n      [disabled]=\"!warn || warnClosed\"\n    >close</button>\n    <div class=\"eventLog\">\n      <div\n        class=\"eventLogEntry eventLogEntry-{{entry}}\"\n        *ngFor=\"let entry of warnEventLog\"\n      >{{translateEventLog(entry)}}</div>\n    </div>\n  </div>\n  <div class=\"col\">\n    <button\n      type=\"button\"\n      class=\"superButton\"\n      (click)=\"openError()\"\n      [disabled]=\"error && !errorClosed\"\n    >add error</button>\n    <button\n      type=\"button\"\n      class=\"superButtonSecondary\"\n      (click)=\"closeError()\"\n      [disabled]=\"!error || errorClosed\"\n    >close</button>\n    <div class=\"eventLog\">\n      <div\n        class=\"eventLogEntry eventLogEntry-{{entry}}\"\n        *ngFor=\"let entry of errorEventLog\"\n      >{{translateEventLog(entry)}}</div>\n    </div>\n  </div>\n</div>\n\n",
  "story-00-simple-notifications.ts": "import { Component } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport {\n  CloukitNotificationService,\n  CloukitNotification,\n  CloukitNotificationType,\n  CloukitNotificationLink,\n  CloukitNotificationAction,\n} from '../../../../projects/cloukit/notification/src/public_api';\n\n@Component({\n  selector: 'cloukit-story-00-simple-notifications',\n  templateUrl: './story-00-simple-notifications.html',\n  styleUrls: [ '../demo.styles.css' ]\n})\nexport class Story00Component {\n\n  constructor(private notificationService: CloukitNotificationService) {}\n\n  success: CloukitNotification;\n  successClosed = true;\n  successEventLog: number[] = [];\n\n  warn: CloukitNotification;\n  warnClosed = true;\n  warnEventLog: number[] = [];\n\n  error: CloukitNotification;\n  errorClosed = true;\n  errorEventLog: number[] = [];\n\n  info: CloukitNotification;\n  infoClosed = true;\n  infoEventLog: number[] = [];\n\n  openSuccess() {\n    const self = this;\n    self.success = new CloukitNotification('Success',\n      'You clicked a button!',\n      CloukitNotificationType.SUCCESS,\n      new CloukitNotificationLink('Ok'),\n      new CloukitNotificationLink('who cares'));\n    self.successClosed = false;\n    self.success.getActions().pipe(\n      finalize(() => self.successClosed = true)\n    ).subscribe(action => {\n      self.successEventLog = [action].concat(self.successEventLog);\n      if (CloukitNotification.isCloseAction(action)) { self.success = null; }\n    });\n    self.notificationService.addNotification(this.success);\n  }\n  closeSuccess() {\n    this.success.forceClose();\n  }\n\n  openInfo() {\n    const self = this;\n    self.info = new CloukitNotification('Info',\n      'Sport is healthy.',\n      CloukitNotificationType.INFO,\n      new CloukitNotificationLink('ok'),\n      new CloukitNotificationLink('naaaah'));\n    self.infoClosed = false;\n    self.info.getActions().pipe(\n      finalize(() => self.infoClosed = true)\n    ).subscribe(action => {\n      self.infoEventLog = [action].concat(self.infoEventLog);\n      if (CloukitNotification.isCloseAction(action)) { self.info = null; }\n    });\n    self.notificationService.addNotification(this.info);\n  }\n  closeInfo() {\n    this.info.forceClose();\n  }\n\n  openWarn() {\n    const self = this;\n    self.warn = new CloukitNotification('Atención',\n      'Los pantalones estan pequeños!',\n      CloukitNotificationType.WARN,\n      new CloukitNotificationLink('confirmar'),\n      new CloukitNotificationLink('cancelar'));\n    self.warnClosed = false;\n    self.warn.getActions().pipe(\n      finalize(() => self.warnClosed = true)\n    ).subscribe(action => {\n      self.warnEventLog = [action].concat(self.warnEventLog);\n      if (CloukitNotification.isCloseAction(action)) { self.warn = null; }\n    });\n    self.notificationService.addNotification(this.warn);\n  }\n  closeWarn() {\n    this.warn.forceClose();\n  }\n\n  openError() {\n    const self = this;\n    self.error = new CloukitNotification('Warn',\n      'Too much sugar is unhealthy!',\n      CloukitNotificationType.ERROR,\n      new CloukitNotificationLink('ok'),\n      new CloukitNotificationLink('nbd'));\n    self.errorClosed = false;\n    self.error.getActions().pipe(\n      finalize(() => self.errorClosed = true)\n    ).subscribe(action => {\n      self.errorEventLog = [action].concat(self.errorEventLog);\n      if (CloukitNotification.isCloseAction(action)) { self.error = null; }\n    });\n    self.notificationService.addNotification(this.error);\n  }\n  closeError() {\n    this.error.forceClose();\n  }\n\n  translateEventLog(type: number) {\n    if (type === CloukitNotificationAction.CLOSE_ICON_CLICKED) { return 'close icon clicked'; }\n    if (type === CloukitNotificationAction.LINK_TWO_CLICKED) { return 'link two clicked'; }\n    if (type === CloukitNotificationAction.LINK_ONE_CLICKED) { return 'link one clicked'; }\n    if (type === CloukitNotificationAction.CLOSE_BY_FORCE) { return 'close by force'; }\n    if (type === CloukitNotificationAction.CLOSE_BY_TIME) { return 'close by time'; }\n  }\n\n}\n",
  "story-01-timed-notifications.html": "<div class=\"row\">\n  <div class=\"col\">\n    <button\n      type=\"button\"\n      class=\"superButton\"\n      (click)=\"openSuccess()\"\n    >add success that will auto close after 2 sec</button>\n  </div>\n</div>\n",
  "story-01-timed-notifications.ts": "import { Component } from '@angular/core';\nimport {\n  CloukitNotificationService,\n  CloukitNotification,\n  CloukitNotificationType,\n  CloukitNotificationLink,\n  CloukitNotificationAction,\n} from '../../../../projects/cloukit/notification/src/public_api';\n\n@Component({\n  selector: 'cloukit-story-01-timed-notifications',\n  templateUrl: './story-01-timed-notifications.html',\n  styleUrls: [ '../demo.styles.css' ]\n})\nexport class Story01Component {\n\n  constructor(private notificationService: CloukitNotificationService) {}\n\n  openSuccess() {\n    const self = this;\n    const notification = new CloukitNotification('Success',\n      'You clicked a button!',\n      CloukitNotificationType.SUCCESS,\n      null, null,\n      2000);\n    self.notificationService.addNotification(notification);\n  }\n\n}\n"
}